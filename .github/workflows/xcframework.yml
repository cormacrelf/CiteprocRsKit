name: Release
on:
  # schedule:
  #   - cron: '5 5 * * *'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: nightly
  push:
    branches:
      ci-test
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  xcframework:
    name: Release .xcframework
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Install Rust toolchain from rust-toolchain file
        id: rust_toolchain
        run: |
          rustup show
          echo "::set-output name=version::$(rustc --version | tr ' ' '-' | sed -e 's/(//' -e 's/)//')"
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            citeproc-rs/target
          key: ${{ runner.os }}-citeproc-rs-release-${{steps.rust_toolchain.outputs.version}}-target
      - name: Carthage build
        id: build
        run: |
          carthage build --use-xcframeworks --no-skip-current --verbose | xcpretty
          cd Carthage/Build && zip -r CiteprocRsKit.xcframework.zip CiteprocRsKit.xcframework
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          CHECKSUM=$(cd Carthage/Build && touch Package.swift && swift package compute-checksum CiteprocRsKit.xcframework.zip && rm Package.swift)
          echo "::set-output name=short_sha::${SHORT_SHA}"
          echo "::set-output name=date::$(date +"%Y-%m-%d")"
          echo "::set-output name=swift_checksum::${CHECKSUM}"


      - if: github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      - if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
      - if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          if expr "$TAG_NAME" : refs/heads/ci-test\$; then
            echo "TAG_NAME=nightly" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
          fi

      - if: env.TAG_NAME == 'nightly'
        run: echo 'SUBJECT=Nightly builds' >> $GITHUB_ENV
      - if: env.TAG_NAME != 'nightly'
        run: echo 'SUBJECT=Release build' >> $GITHUB_ENV

      # - if: env.TAG_NAME == 'nightly'
      #   uses: meeDamian/github-release@2.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: nightly
      #     files: CiteprocRsKit.xcframework-nightly-${{ steps.build.outputs.date }}-${{ steps.build.outputs.short_sha }}.zip:Carthage/Build/CiteprocRsKit.xcframework.zip
      #     body: ${{env.SUBJECT}}
      #     # GITHUB_REPOSITORY: my_gh_org/my_gh_repo

      - name: Update refs/tags/nightly
        uses: actions/github-script@v3
        id: get_release
        with:
          github-token: ${{ github.token }}
          script: |
            let release = await github.repos.getReleaseByTag({ ...context.repo, tag: 'nightly' });
            core.setOutput('release_id', release.release_id);
            core.setOutput('upload_url', release.release_id);
            await github.git.updateRef({
              ...context.repo,
              ref: "refs/tags/nightly",
              sha: context.sha,
            });

      - name: Deploy assets to existing nightly release
        uses: WebFreak001/deploy-nightly@v1.1.0
        id: named_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          release_id: ${{ steps.get_release.outputs.release_id }}
          asset_path: Carthage/Build/CiteprocRsKit.xcframework.zip
          asset_name: CiteprocRsKit.xcframework-nightly-$$
          asset_content_type: application/zip
          max_releases: 15

      - if: env.TAG_NAME == 'nightly'
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly
          body: |
            ${{env.SUBJECT}}

            Swift checksum of latest one: ${{ steps.build.outputs.swift_checksum }}

      - name: Publish to CiteprocRsKit-Binary [nightly]
        env:
          BINARY_TOKEN: ${{ secrets.BINARY_TOKEN }}
        run: |
          ROOT="$(pwd)"
          TMP="$(mktmp -d)"
          cd "$TMP"
          git clone https://github.com/cormacrelf/CiteprocRsKit-Binary.git --branch nightly
          cd CiteprocRsKit-Binary
          cp -R "$ROOT"/Scripts/BinaryPackage/* .
          sed \
            -e 's,XCFRAMEWORK_ZIP_URL,${{ steps.get_release.outputs.upload_url }},i' \
            -e 's,XCFRAMEWORK_CHECKSUM,${{ steps.build.outputs.swift_checksum }},i' \
            < "$ROOT/Scripts/BinaryPackage/Package.swift" \
            > "./Package.swift"
          git add .
          git commit -m "update nightly to ${{ steps.build.outputs.short_sha }}" \
                     -m "https://github.com/cormacrelf/CiteprocRsKit/commit/$GITHUB_SHA"
          git push --force https://cormacrelf:${BINARY_TOKEN}@github.com/cormacrelf/CiteprocRsKit-Binary.git nightly
          cd
          rm -rf "$TMP"

