#!/usr/bin/env bash

set -eu
set -o pipefail

cd $PROJECT_DIR

CARGO_TARGET_DIR=citeproc-rs/target
CARGO_TOML=citeproc-rs/bindings/ffi/Cargo.toml
LIBRARY_FILENAME=libciteproc_rs.a

TESTABILITY_CARGO_FEATURE="testability"

source Scripts/environment
source Scripts/xcode-to-cargo

OUT_DIR="Cargo/Build/$PLATFORM_NAME/$CONFIGURATION"
mkdir -p "$OUT_DIR"

echo "building for $ARCHS" > /dev/stderr
if [[ -z "$ARCHS" ]]; then echo "ARCHS env var empty"; exit 1; fi
IFS=" " read -ra xcode_archs <<< "$ARCHS"
for arch in "${xcode_archs[@]}"; do
  BUILT_LIB=$(cargo_build_arch_plat "$CARGO_TARGET_DIR" "$CARGO_TOML" $arch $PLATFORM_NAME $LIBRARY_FILENAME)
  mkdir -p "$OUT_DIR/$arch"
  (set -x; cp "$BUILT_LIB" "$OUT_DIR/$arch")
done

# lipo fat libraries can be used if you want.
# just change library search path in xcode to exclude the arch
# LIPO_INPUTS=""
# LIPO_OUTPUT="$OUT_DIR/$LIBRARY_FILENAME"
# in loop:
# LIPO_INPUTS="$LIPO_INPUTS $(cargo_build_arch_plat "$CARGO_TARGET_DIR" "$CARGO_TOML" $arch $PLATFORM_NAME $LIBRARY_FILENAME)"
# gather (either works):
# (set -x; lipo -create -output "$LIPO_OUTPUT" $LIPO_INPUTS)
# (set -x; libtool -static -D -syslibroot "$SDKROOT" -o "$LIPO_OUTPUT" $LIPO_INPUTS)
